#! /bin/sh

INTERNAL_MONITOR="eDP"
EXTERNAL_MONITOR="HDMI-A-0"
# se conecta monitor durante la sesión y que sea el principal
monitor_add() {
  #mueve primeros 5 espacios de trabajo al monitor externo (He puesto 10q porque están los 10 escritorios en el externo)
  for desktop in $(bspc query -D --names -m "$INTERNAL_MONITOR" | sed 10q); do
	bspc desktop "$desktop" --to-monitor "$EXTERNAL_MONITOR" 
  done

  #elimina el escritorio predeterminado creado por bspwm
  bspc desktop Desktop --remove

  #reordena los monitores
  bspc wm -0 "$EXTERNAL_MONITOR" "$INTERNAL_MONITOR"
}

# se desconecta durante la sesion
monitor_remove() {
  #add default temp desktop because a minimum of one desktop is required per monitor
  bspc monitor "$EXTERNAL_MONITOR" -a Desktop

  #Move all desktops except the last default desktop to internal monitor
  for desktop in $(bspc query -D -m "$EXTERNAL_MONITOR"); do
	bspc desktop "$desktop" --to-monitor "$INTERNAL_MONITOR"
  done

  #delete default desktops
  bspc desktop Desktop --remove

  #reorder desktops
  bspc monitor "$INTERNAL_MONITOR" -o 1 2 3 4 5 6 7 8 9 10
}

pgrep -x sxhkd > /dev/null || sxhkd &

bspc monitor -d I II III IV V VI VII VIII IX X

bspc config border_width        1
bspc config window_gap          2

bspc config split_ratio          0.50
bspc config borderless_monocle   true
bspc config gapless_monocle      true

bspc rule -a Gimp desktop='^8' state=floating follow=on
bspc rule -a Chromium desktop='^2'
bspc rule -a mplayer2 state=floating
bspc rule -a Kupfer.py focus=on
bspc rule -a Screenkey manage=off
bspc rule -a Zathura state=tiled


feh --bg-fill /home/diego/Wallpapers/fondo.jpg
~/.config/polybar/forest/launch.sh

# BORDES REDONDEADOS
picom --experimental-backends &
bspc config border_width 1


# CONFIGURACION de segundo monitor (si conectado al arrancar por primera vez)
# on first load setup default workspaces
if [[ "$1" = 0 ]]; then
  if [[ $(xrandr -q | grep "${EXTERNAL_MONITOR} connected") ]]; then
	bspc monitor "$EXTERNAL_MONITOR" -d 1 2 3 4 5 6 7 8 9 10
	#bspc monitor "$INTERNAL_MONITOR" -d 6 7 8 9 10
	bspc wm -0 "$EXTERNAL_MONITOR" "$INTERNAL_MONITOR" 
  else
	bspc monitor "$INTERNAL_MONITOR" D 1 2 3 4 5 6 7 8 9 10
  fi
fi

#Putting it all together
if [[ $(xrandr -q | grep "${EXTERNAL_MONITOR} connected") ]]; then
  # set xrandr rules for docked setup
  xrandr --output "$INTERNAL_MONITOR" --mode 1920x1080 --pos 0x0 --rotate normal --output "$EXTERNAL_MONITOR" --primary --mode 1920x1080 --pos 1920x0 --rotate normal
  if [[ $(bspc query -D -m "${EXTERNAL_MONITOR}" | wc -l) -ne 5 ]]; then
    monitor_add
  fi
  bspc wm -O "$EXTERNAL_MONITOR" "$INTERNAL_MONITOR"
else
  # set xrandr rules for mobile setup
  xrandr --output "$INTERNAL_MONITOR" --primary --mode 1920x1080 --pos 0x0 --rotate normal --output "$EXTERNAL_MONITOR" --off
  if [[ $(bspc query -D -m "${INTERNAL_MONITOR}" | wc -l) -ne 10 ]]; then
    monitor_remove
  fi
fi
